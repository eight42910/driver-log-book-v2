---
description: 
globs: 
alwaysApply: true
---
# 開発進行ルール

## 機能別開発フロー

### 1機能あたりの開発サイクル

#### 1. 要件定義・設計（30分）
- 機能の目的と仕様を明確化
- データフローの設計
- UIワイヤーフレームの作成

#### 2. 技術調査・学習（45分）
- 必要な技術の公式ドキュメント確認
- ベストプラクティスの調査
- サンプルコードの理解

#### 3. 実装（90分）
- 小さな単位で実装・テスト
- コミットは機能単位で細かく
- エラーハンドリングも同時実装

#### 4. レビュー・リファクタリング（30分）
- コード品質の確認
- パフォーマンスの検証
- ドキュメント更新

## コミット・ブランチ戦略

### ブランチ命名規則
- feature/auth-login (認証機能)
- feature/daily-log-form (日報入力フォーム)
- feature/expense-tracking (経費記録)
- fix/validation-error (バグ修正)
- docs/readme-update (ドキュメント更新)

### コミットメッセージ
- feat: ユーザー認証機能を実装
- fix: 日報フォームのバリデーションエラーを修正
- docs: READMEにセットアップ手順を追加
- refactor: 共通コンポーネントを分離
- style: Tailwindクラスの整理
