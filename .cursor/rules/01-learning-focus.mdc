---
description: 
globs: 
alwaysApply: true
---
# 学習フォーカス・ルール

## 段階的学習アプローチ

### Phase 1: 基礎理解
- 各技術の役割を明確に理解してから実装
- Next.js App Router → Supabase → TypeScript → Tailwind の順で習得
- 一つの機能を完全に理解してから次へ進む

### Phase 2: 実装パターン習得
- コンポーネント設計パターンの学習
- カスタムフックの作成方法
- 状態管理（Zustand）の実践

### Phase 3: 統合・最適化
- パフォーマンス最適化
- セキュリティベストプラクティス
- デプロイメント戦略

## コード品質・学習ルール

### 必須確認事項
各実装前に以下を確認：
✅ この機能の目的と仕様を明確に理解している
✅ 使用する技術の基本概念を説明できる
✅ エラーハンドリングの方法を理解している
✅ テストケースを想定できている

### 推奨振り返り事項
実装後の振り返り：
📝 何を学んだか記録する
📝 つまずいた点と解決方法を記録する
📝 改善できる点を特定する
�� 次回同様の実装時の注意点をメモする
